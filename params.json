{"name":"Caronas-jsp","tagline":"","body":"## Caronas\r\n--\r\nContinuando nosso projeto de caronas, agora iremos usar **JSP**.  \r\nIremos mexer no método **doPost** do *controller* `EfetuaLogin`, e caso o usuário seja `adm`, irão ser abertas novas opções no menu.  \r\n  \r\n--\r\n## Bean\r\nA primeira coisa que devemos fazer é criar o bean que sera recuperado na view.  \r\nPara isso, basta clicar com o botão direito na raiz do projeto, selecionar a opção `Novo` > `Classe Java`.  \r\nEm `Nome da classe`, preencha com **Usuario** e em `Pacote`, preencha com **model**.  \r\n[<img src=\"https://raw.github.com/hugonomura/imagens-tutorial/master/img27.png\">](#)  \r\nClique em **Finalizar**.  \r\n  \r\nDentro da classe criada, iremos precisar de dois atributos do tipo String, sendo um para sabermos o tipo do usuário e outro para sabermos o usuario.  \r\nPara isso, basta adicionarmos...  \r\n  \r\n    private String usuario;\r\n    private String tipo;\r\n  \r\nComo precisamos dos getters e setters, podemos usador o **gerador de código** do Netbeans. Para isso, basta usarmos o atalho `Alt` + `Insert`, selecionarmos a Opção **Getter e setter**.  \r\nSelecionar os campos que queremos os **Getters** e **Setters**, no nosso caso, todos os campos.  \r\n  \r\n[<img src=\"https://raw.github.com/hugonomura/imagens-tutorial/master/img28.png\">](#)  \r\n  \r\nE clicar em **Gerar**.  \r\n  \r\n--\r\n## doPost\r\nDentro do método **doPost** (que está dentro do servlet `EfetuaLogin`), remova as linhas de código que estiverem nela, deixando apenas a declaração do método.  \r\n[<img src=\"https://raw.github.com/hugonomura/imagens-tutorial/master/img20.png\">](#)  \r\n  \r\nVamos fazer a recuperação dos dados do formulário normalmente no **servlet**, da seguinte forma:  \r\n  \r\n      String login = request.getParameter(\"login\");\r\n      String senha = request.getParameter(\"senha\");\r\n  \r\nPodemos fazer também algum tipo de validação de **login** e **senha**, como ainda não temos acesso ao banco de dados, podemos verificar simplesmente se **login** e **senha** tem o mesmo valor, da seguinte forma:  \r\n  \r\n      if(login.equals(senha)){\r\n         // aqui faremos o redirecionamento para a página 'logado'\r\n      }\r\n      // aqui faremos o redirecionamento para a página de login\r\n  \r\n  \r\nAgora, por uma questão de comodidade, faremos o redirecionamento de volta para a página de **login**, caso os campos `login` e `senha` não possuam o mesmo valor. Para isso, usaremos o método `sendRedirect`, que pertence ao objeto **response**.  \r\nPara isso, basta fazermos isso:  \r\n  \r\n      response.sendRedirect(\"/index.jsp\");\r\n  \r\nCom isso feito, voltemos para o nosso `if(login.equals(senha))` para realizar o redirecionamento para a página logado.  \r\nPrimeiro, temos que criar uma instancia de Usuario e retornar os dados para a view através dela. Isso é feito da seguinte forma:  \r\n  \r\n                Usuario objUsuario=new Usuario();\r\n                objUsuario.setUsuario(login);\r\n  \r\nProvavelmente, o **Netbeans** está indicando um erro nessa linha, pois não realizamos o import dessa classe. Resolvemos isso realizando o import no inicio do arquivo.  \r\n  \r\n    import model.Usuario;\r\n  \r\nO objeto ainda não está disponível na view, para que ele esteja acessível na view, devemos colocar o objeto instanciando em um atributo, da seguinte forma:  \r\n  \r\n    request.setAttribute(\"usuarioBean\",objUsuario);\r\n  \r\nSendo que, na view iremos recuperar o objeto usando o nome **usuarioBean**.  \r\nPara fazermos o redirecionamento, precisamos do método `foward` pertencente a classe **RequestDispatcher**. Basta criarmos uma instância da classe **RequestDispatcher**, da seguinte forma:  \r\n  \r\n      RequestDispatcher rd = null;\r\n  \r\nProvavelmente, o **Netbeans** está indicando um erro nessa linha, pois, novamente, não realizamos o import dessa classe. Resolvemos isso criando o import para **javax.servlet.RequestDispatcher** (basta adicionar `import javax.servlet.RequestDispatcher;` junto aos imports no inicio da classe)...  \r\nou podemos simplesmente clicar sobre o ícone apontando o erro na linha...  \r\n[<img src=\"https://raw.github.com/hugonomura/imagens-tutorial/master/img21.png\">](#)  \r\n  \r\n e pedir para a **IDE** realizar o import.  \r\n[<img src=\"https://raw.github.com/hugonomura/imagens-tutorial/master/img22.png\">](#)  \r\n  \r\n         rd = request.getRequestDispatcher(\"/viewLogado.jsp\");\r\n         rd.forward(request, response);\r\n  \r\nAssim, a nossa página `viewLogado` irá tratar a requisição.  \r\n  \r\n--\r\n## Criando a view...\r\nPara criar uma nova página **JSP**, basta clicarmos com o **botão direito** em `Páginas Web` > `Novo` > `JSP...`  \r\n  \r\nMudar o nome do arquivo para viewLogado...\r\n[<img src=\"https://raw.github.com/hugonomura/imagens-tutorial/master/img23.png\">](#)  \r\n  \r\nE clicar em `Finalizar`.  \r\n  \r\nTambém devemos alterar o nome de **index.html** para **index.jsp**.  \r\nPara fazer isso, basta clicar com o botão direito sobre `index.html`, selecionar **Propiedades** > **Renomear**.  \r\nAlterar a extensão para **jsp**.  \r\n  \r\n[<img src=\"https://raw.github.com/hugonomura/imagens-tutorial/master/img26.png\">](#)  \r\n  \r\nE clicar em **Fechar**.  \r\nDevemos fazer o mesmo com a página **cadastro.html**.  \r\n    \r\nComo realizamos essa alteração, precisamos arrumar nosso menu também para que nossa aplicação não quebre.  \r\nDevemos alterar as ocorrências de **index.html** e **cadastro.html** para **index.jsp** e **cadastro.jsp**, respectivamente.  \r\nIsso deve ser feito dentro das páginas **index.jsp** e **cadastro.jsp**.  \r\n  \r\n--\r\n## Editando a view...\r\nAgora que já temos a **view** criada, podemos editá-la de acordo com o que realmente queremos fazer.  \r\nPodemos apagar todo o conteúdo do arquivo gerado e substituir pelo conteúdo do nosso `index.jsp`, apenas para termos um ponto de partida.  \r\nComo queremos editar o menu superior, devemos encontrar as linhas do menu e alterá-las para aparecer diferentes opções caso o usuário seja do tipo **adm**, conforme o **atributo** que registramos no nosso **servlet**.  \r\nPara isso, basta substituir o conteúdo do menu pelo conteúdo abaixo.  \r\n  \r\n            <% \r\n                Usuario objUsuarioBean = (Usuario)request.getAttribute(\"usuarioBean\");\r\n                if (objUsuarioBean!=null){\r\n                 if(objUsuarioBean.getUsuario().equals(\"adm\")){\r\n              %>\r\n            <li><a href=\"#.jsp\" class=\"active\">Autorização de usuário</a></li>\r\n            <li><a href=\"#.jsp\">Cadastro de Rotas</a></li>\r\n            <%\r\n                 }\r\n                }\r\n            %>\r\n  \r\nExplicando, o `request.getAtribute` é igual ao que faziamos no **servlet**, mas como iremos colocar em uma instancia de **Usuario**, devemos fazer um cast.  \r\n  \r\nTambém temos que alterar o conteúdo do `article`, iremos apenas mostrar uma mensagem de boas vindas para o usuario logado, para isso, devemos fazer o seguinte:  \r\n  \r\n        <header>\r\n          <%\r\n          if(objUsuarioBean!=null){\r\n            %>\r\n          <h1>Bem vindo ao sistema de caronas <%= objUsuarioBean.getUsuario() %></h1>\r\n           <%   \r\n            }else {\r\n            %>\r\n            <h1>Erro no login!</h1>\r\n            <p> <a href=\"index.jsp\"> Voltar ao Login</a></p>\r\n             <%      }         %>\r\n        </header>\r\n  \r\nExplicando, estamos apenas fazendo uma verificação, onde, caso tenha ocorrido algum problema para instanciar `objUsuarioBean`, é mostrada uma mensagem de erro e, caso contrário, mostrada a mensagem de boas vindas.  \r\n  \r\n--\r\n# Resultado\r\nAo fim desse tutorial, o método `doPost` do **servlet** `EfetuaLogin`, deve estar assim:  \r\n  \r\n        @Override\r\n        protected void doPost(HttpServletRequest request, HttpServletResponse response)\r\n                throws ServletException, IOException {\r\n            String login = request.getParameter(\"login\");\r\n            String senha = request.getParameter(\"senha\");\r\n\r\n            if(login.equals(senha)){\r\n\r\n                      //vinculo o bean\r\n\r\n                      Usuario objUsuario=new Usuario();\r\n                      objUsuario.setUsuario(login);\r\n\r\n                      // vincula bean\r\n                      request.setAttribute(\"usuarioBean\",objUsuario);\r\n\r\n                      RequestDispatcher rd = null;\r\n                      rd = request.getRequestDispatcher(\"/viewLogado.jsp\");\r\n                      rd.forward(request, response);\r\n            }\r\n            response.sendRedirect(\"index.jsp\");\r\n        }\r\n  \r\n  \r\nE a página `viewLogado`, deve estar assim:  \r\n  \r\n        <!DOCTYPE html>\r\n        <%@page import=\"model.Usuario\" %>\r\n        <html>\r\n          <head>\r\n            <title>Caronas | Inicio</title>\r\n            <meta charset=\"UTF-8\">\r\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"estilo.css\">\r\n            <script src=\"http://code.jquery.com/jquery-1.9.1.js\"></script>\r\n          </head>\r\n          <body>\r\n            <header class=\"container\">\r\n              <h1 id=\"logo\"><a href=\"index.jsp\">Caronas</a></h1>\r\n              <nav id=\"menu\">\r\n                <ul>\r\n                    <% \r\n                        Usuario objUsuarioBean = (Usuario)request.getAttribute(\"usuarioBean\");\r\n                        if (objUsuarioBean!=null){\r\n                         if(objUsuarioBean.getUsuario().equals(\"adm\")){\r\n                      %>\r\n                    <li><a href=\"#.jsp\" class=\"active\">Autorização de usuário</a></li>\r\n                    <li><a href=\"#.jsp\">Cadastro de Rotas</a></li>\r\n                    <%\r\n                         }\r\n                        }\r\n                    %>\r\n                </ul>\r\n              </nav>\r\n            </header>\r\n            <section class=\"container\">\r\n              <article id=\"form\">\r\n                <header>\r\n                  <%\r\n                  if(objUsuarioBean!=null){\r\n                    %>\r\n                  <h1>Bem vindo ao sistema de caronas <%= objUsuarioBean.getUsuario() %></h1>\r\n                   <%   \r\n                    }else {\r\n                    %>\r\n                    <h1>Erro no login!</h1>\r\n                    <p> <a href=\"index.jsp\"> Voltar ao Login</a></p>\r\n                     <%      }         %>\r\n                </header>\r\n               </article>\r\n            </section>\r\n            <footer class=\"container\">\r\n              <p>Desenvolvimento Web - UFSCar Sorocaba - 2013</p>\r\n            </footer>\r\n            <script>\r\n              $(document).ready(function(){\r\n\r\n              });\r\n            </script>\r\n          </body>\r\n        </html>\r\n  \r\n--\r\n## Imagens\r\n  \r\nQuando o usuário entrar com o valor **adm** no campo `login` e **adm** no campo `senha`, o resultado deve ser:  \r\n[<img src=\"https://raw.github.com/hugonomura/imagens-tutorial/master/adm.png\">](#)  \r\n  \r\nQuando o usuário entrar com os mesmos valores em `login` e `senha`, sendo que o valor dos campos é diferente de **adm**, o resultado deve ser:  \r\n[<img src=\"https://raw.github.com/hugonomura/imagens-tutorial/master/naoAdm.png\">](#)  \r\n  \r\nNos outros casos, deve ser mostrada a tela de login, normalmente.  ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}